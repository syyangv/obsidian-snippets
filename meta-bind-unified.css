/* =============================================================================
   META-BIND UNIFIED INTEGRATION
   Unified solution for Meta-Bind toggle switches and tag selectors
   
   Architecture: Conflict-free cascade with namespace separation
   Replaces: meta-bind-complete.css + tag-selector.css
   Author: Claude Code Senior Engineer + Visual Designer
   Version: 1.0.0
   ============================================================================= */

/* =============================================================================
   ARCHITECTURE OVERVIEW
   
   This file resolves CSS conflicts between Meta-Bind toggles and custom tag
   selectors by implementing proper namespace separation and cascade hierarchy.
   
   Component Types:
   1. Standard Meta-Bind Toggles (switch-style) - Default Meta-Bind behavior
   2. Tag Selector Buttons (.tag-selector namespace) - Custom button styling
   3. Edit Button Management - Unified hiding logic for Meta-Bind blocks
   4. Category Color System - Semantic field-specific styling
   ============================================================================= */

/* =============================================================================
   PERFORMANCE OPTIMIZATIONS
   ============================================================================= */

.meta-bind-input-toggle,
.mb-input-type-toggle,
.tag-selector {
  /* CSS Containment for better rendering performance */
  contain: style layout;
  /* Optimize for frequent state changes */
  will-change: auto;
}

/* =============================================================================
   EDIT BUTTON MANAGEMENT
   Streamlined approach to hiding edit buttons for Meta-Bind blocks
   ============================================================================= */

/* Target Meta-Bind containers efficiently */
div:has(.block-language-meta-bind) .edit-block-button,
div:has(.mb-input-type-toggle) .edit-block-button,
div:has(.meta-bind-input-toggle) .edit-block-button {
  display: none !important;
  pointer-events: none;
}

/* Fallback for meta-bind class patterns */
[class*="meta-bind"] ~ .edit-block-button,
[class*="mb-input"] ~ .edit-block-button {
  display: none !important;
  pointer-events: none;
}

/* =============================================================================
   STANDARD META-BIND TOGGLES (Switch Style)
   Preserve default Meta-Bind functionality for standard toggles
   ============================================================================= */

/* Exclude tag-selector from standard toggle styling */
.mb-input-type-toggle:not(.tag-selector .mb-input-type-toggle) input[type="checkbox"] {
  appearance: none;
  -webkit-appearance: none;
  width: 44px;
  height: 24px;
  background: var(--background-modifier-border);
  border: 1px solid var(--background-modifier-border);
  border-radius: 12px;
  position: relative;
  cursor: pointer;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  margin: 0;
  overflow: visible;
}

/* Toggle switch handle */
.mb-input-type-toggle:not(.tag-selector .mb-input-type-toggle) input[type="checkbox"]::before {
  content: '';
  position: absolute;
  top: 2px;
  left: 2px;
  width: 20px;
  height: 20px;
  background: var(--background-primary);
  border-radius: 50%;
  transition: transform 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

/* Active/Checked state */
.mb-input-type-toggle:not(.tag-selector .mb-input-type-toggle) input[type="checkbox"]:checked {
  background: var(--interactive-accent);
  border-color: var(--interactive-accent);
}

.mb-input-type-toggle:not(.tag-selector .mb-input-type-toggle) input[type="checkbox"]:checked::before {
  transform: translateX(20px);
  background: var(--text-on-accent);
}

/* Hover states */
.mb-input-type-toggle:not(.tag-selector .mb-input-type-toggle) input[type="checkbox"]:hover {
  box-shadow: 0 0 0 4px rgba(var(--interactive-accent-rgb), 0.1);
}

/* Focus states */
.mb-input-type-toggle:not(.tag-selector .mb-input-type-toggle) input[type="checkbox"]:focus {
  outline: 2px solid var(--interactive-accent);
  outline-offset: 2px;
}

/* =============================================================================
   TAG SELECTOR SYSTEM (Button Style)
   Custom button-style tag selectors with namespace isolation
   ============================================================================= */

/* Base container styling for tag selector sections */
.tag-selector {
  margin: 16px 0;
  padding: 0;
}

/* Hide standard toggle inputs within tag selector contexts */
.tag-selector .meta-bind-input-toggle input {
  display: none;
}

/* Tag selector layout - inline display */
.tag-selector .meta-bind-input-toggle {
  display: inline-flex;
  align-items: center;
  vertical-align: middle;
  margin: 0 4px 4px 0;
}

/* Base button styling for tag selectors */
.tag-selector .meta-bind-button {
  background: var(--background-primary);
  border: 1px solid var(--background-modifier-border);
  border-radius: 12px;
  padding: 2px 8px;
  font-size: 0.75em;
  color: var(--text-muted);
  cursor: pointer;
  transition: all 0.15s cubic-bezier(0.4, 0, 0.2, 1);
  min-width: 40px;
  height: 24px;
  text-align: center;
  line-height: 20px;
  font-weight: 400;
  user-select: none;
}

/* Hover state */
.tag-selector .meta-bind-button:hover {
  background: var(--background-modifier-hover);
  border-color: var(--text-muted);
  color: var(--text-normal);
  transform: translateY(-1px);
}

/* Active state (selected) */
.tag-selector .meta-bind-button[data-mb-active="true"] {
  background: var(--interactive-accent);
  border-color: var(--interactive-accent);
  color: var(--text-on-accent);
  font-weight: 500;
  box-shadow: 0 2px 6px rgba(var(--interactive-accent-rgb), 0.3);
}

.tag-selector .meta-bind-button[data-mb-active="true"]:hover {
  background: var(--interactive-accent-hover);
  border-color: var(--interactive-accent-hover);
  transform: translateY(-1px);
}

/* Click feedback */
.tag-selector .meta-bind-button:active {
  transform: scale(0.95) translateY(0);
}

/* =============================================================================
   SYNC BUTTON COMPONENT
   ============================================================================= */

.tag-sync-container {
  text-align: center;
  margin: 16px 0;
  padding: 12px;
  background: var(--background-secondary);
  border-radius: 8px;
}

.sync-button {
  background: var(--interactive-accent);
  color: var(--text-on-accent);
  border: none;
  border-radius: 6px;
  padding: 6px 16px;
  font-size: 0.8em;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.15s cubic-bezier(0.4, 0, 0.2, 1);
  height: 28px;
}

.sync-button:hover {
  background: var(--interactive-accent-hover);
  transform: translateY(-1px);
  box-shadow: 0 2px 6px rgba(var(--interactive-accent-rgb), 0.2);
}

.sync-button:active {
  transform: scale(0.98) translateY(0);
}

/* =============================================================================
   SECTION HEADERS
   ============================================================================= */

.tag-selector h2 {
  font-size: 0.9em;
  margin: 16px 0 8px 0;
  color: var(--text-normal);
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

/* =============================================================================
   CATEGORY COLOR SYSTEM
   Semantic field-specific colors for active tag states
   ============================================================================= */

/* Health & Wellness - Green variants */
.tag-selector .meta-bind-button[data-mb-field="therapy"][data-mb-active="true"],
.tag-selector .meta-bind-button[data-mb-field="‰∏æÈìÅ"][data-mb-active="true"],
.tag-selector .meta-bind-button[data-mb-field="üéæ"][data-mb-active="true"],
.tag-selector .meta-bind-button[data-mb-field="health"][data-mb-active="true"],
.tag-selector .meta-bind-button[data-mb-field="ÁúãÂåªÁîü"][data-mb-active="true"] {
  background: #27ae60;
  border-color: #27ae60;
}

/* Learning & Growth - Orange/Gold variants */
.tag-selector .meta-bind-button[data-mb-field="Â≠¶‰π†"][data-mb-active="true"],
.tag-selector .meta-bind-button[data-mb-field="learning"][data-mb-active="true"] {
  background: #f39c12;
  border-color: #f39c12;
}

/* Work & Professional - Blue variants */
.tag-selector .meta-bind-button[data-mb-field="work"][data-mb-active="true"] {
  background: #3498db;
  border-color: #3498db;
}

/* Social & Relationships - Pink variants */
.tag-selector .meta-bind-button[data-mb-field="socializing"][data-mb-active="true"],
.tag-selector .meta-bind-button[data-mb-field="social"][data-mb-active="true"],
.tag-selector .meta-bind-button[data-mb-field="family"][data-mb-active="true"] {
  background: #e91e63;
  border-color: #e91e63;
}

/* Creative & Expression - Purple/Red variants */
.tag-selector .meta-bind-button[data-mb-field="üé§"][data-mb-active="true"],
.tag-selector .meta-bind-button[data-mb-field="ÁúãÊàè"][data-mb-active="true"],
.tag-selector .meta-bind-button[data-mb-field="hobby"][data-mb-active="true"],
.tag-selector .meta-bind-button[data-mb-field="creative"][data-mb-active="true"] {
  background: #9b59b6;
  border-color: #9b59b6;
}

/* Daily Life & Maintenance - Brown variants */
.tag-selector .meta-bind-button[data-mb-field="‰∏ãÂé®"][data-mb-active="true"],
.tag-selector .meta-bind-button[data-mb-field="cooking"][data-mb-active="true"] {
  background: #e67e22;
  border-color: #e67e22;
}

/* Adventure & Travel - Teal variants */
.tag-selector .meta-bind-button[data-mb-field="travel"][data-mb-active="true"] {
  background: #16a085;
  border-color: #16a085;
}

/* =============================================================================
   LAYOUT FIXES
   Proper alignment and spacing for Meta-Bind elements
   ============================================================================= */

/* Fix alignment in reading view */
.markdown-reading-view p:has(.meta-bind-input-toggle:not(.tag-selector .meta-bind-input-toggle)) {
  display: flex;
  align-items: center;
  gap: 8px;
  line-height: 1.5;
}

/* Compact spacing for tag selector sections */
.tag-selector p {
  line-height: 1.3;
  margin: 0 0 8px 0;
}

/* =============================================================================
   RESPONSIVE DESIGN
   ============================================================================= */

@media (max-width: 768px) {
  .tag-selector .meta-bind-button {
    font-size: 0.7em;
    padding: 3px 6px;
    min-width: 36px;
    height: 22px;
    line-height: 16px;
  }
  
  .tag-selector h2 {
    font-size: 0.85em;
    margin: 12px 0 6px 0;
  }
  
  .tag-sync-container {
    padding: 10px;
    margin: 12px 0;
  }
  
  .sync-button {
    font-size: 0.75em;
    padding: 5px 12px;
    height: 26px;
  }
}

@media (max-width: 480px) {
  .tag-selector .meta-bind-input-toggle {
    margin: 0 2px 6px 0;
  }
  
  .tag-selector .meta-bind-button {
    font-size: 0.65em;
    padding: 2px 4px;
    min-width: 32px;
    height: 20px;
    line-height: 16px;
  }
}

/* =============================================================================
   ACCESSIBILITY FEATURES
   ============================================================================= */

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .tag-selector .meta-bind-button,
  .sync-button,
  .mb-input-type-toggle input[type="checkbox"],
  .mb-input-type-toggle input[type="checkbox"]::before {
    transition-duration: 0.01ms;
    animation-duration: 0.01ms;
  }
}

/* High contrast support */
@media (prefers-contrast: high) {
  .tag-selector .meta-bind-button {
    border-width: 2px;
  }
  
  .tag-selector .meta-bind-button[data-mb-active="true"] {
    border-width: 2px;
    outline: 2px solid var(--text-on-accent);
    outline-offset: 2px;
  }
  
  .mb-input-type-toggle input[type="checkbox"] {
    border-width: 2px;
  }
}

/* Focus indicators for keyboard navigation */
.tag-selector .meta-bind-button:focus-visible {
  outline: 2px solid var(--interactive-accent);
  outline-offset: 2px;
}

.sync-button:focus-visible {
  outline: 2px solid var(--text-on-accent);
  outline-offset: 2px;
}

/* =============================================================================
   DEBUGGING HELPERS
   Uncomment for conflict investigation
   ============================================================================= */

/*
.meta-bind-input-toggle {
  outline: 2px dashed red !important;
}

.tag-selector .meta-bind-input-toggle {
  outline: 2px dashed green !important;
}
*/

/* =============================================================================
   CONFLICT PREVENTION
   Reset protection for accidentally styled standard toggles
   ============================================================================= */

/* Ensure standard Meta-Bind toggles aren't affected by global styles */
.meta-bind-input-toggle:not(.tag-selector .meta-bind-input-toggle) .meta-bind-button {
  all: revert;
  display: initial;
}

/* Ensure standard toggle inputs remain visible */
.meta-bind-input-toggle:not(.tag-selector .meta-bind-input-toggle) input {
  display: initial !important;
}

/* =============================================================================
   BROWSER COMPATIBILITY
   ============================================================================= */

/* Fallback for browsers without CSS containment */
@supports not (contain: style) {
  .meta-bind-input-toggle,
  .mb-input-type-toggle,
  .tag-selector {
    transform: translateZ(0); /* Force hardware acceleration */
  }
}

/* Fallback for older flexbox implementations */
@supports not (gap: 8px) {
  .markdown-reading-view p:has(.meta-bind-input-toggle:not(.tag-selector .meta-bind-input-toggle)) > * + * {
    margin-left: 8px;
  }
}